- name: Create all VPCs
  hosts: vpcs
  gather_facts: no
  environment:
    AWS_ACCESS_KEY: "{{ aws_access_key }}"
    AWS_SECRET_KEY: "{{ aws_secret_key_id }}"
    AWS_REGION: "{{ aws_region }}"
  tasks:
      - name: Import Facts
        import_tasks: tasks/vpc_facts.yml
        tags: [facts, never]

      - name: Create New VPC
        ec2_vpc_net:
          cidr_block: "{{ vpc_cidr }}"
          region: "{{ aws_region }}"
          name: "{{ vpc_name }}"
          state: present
          tags: "{{ vpc_tags }}"
        tags: [vpc,subnet,igw,rt]
        register: create_vpc

      - name: "set fact: VPC ID"
        set_fact:
          vpc_id: "{{ create_vpc.vpc.id }}"
        tags: [vpc,subnet,igw,rt]

      - name: create VPC subnets
        ec2_vpc_subnet:
          region: "{{ aws_region }}"
          vpc_id: "{{ vpc_id }}"
          cidr: "{{ item.value.cidr }}"
          az: "{{ item.value.az }}"
          tags: "{{item.value.tags | combine({ 'Name': item.key })}}"
        with_dict: "{{ vpc_subnets }}"
        register: create_vpc_subnets

      - name: Get VPC Subnets IDs
        set_fact:
          vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ item.subnet.tags.Name: item.subnet.id }) }}"
        with_items: "{{ create_vpc_subnets.results }}"

      - name: Create IGW
        ec2_vpc_igw:
          region: "{{ aws_region }}"
          vpc_id: "{{ vpc_id }}" 
          state: present
          tags: "{{ vpc_tags | combine({'Name': igw_name}) }}"
        register: vpc_igw_create
        tags:
          - igw

      - name: Extract VPC IGW ID
        set_fact:
          igw_id: "{{ vpc_igw_create.gateway_id }}"

      - name: Get Default VPC Route Table
        ec2_vpc_route_table_facts:
          filters:
            vpc-id: "{{ vpc_id }}"
        register: vpc_route_table_facts
        tags: rt

      - name: Extract Route Table IDs
        set_fact:
          rt_id: "{{vpc_route_table_facts.route_tables[0].id }}"
        tags: rt

      - name: Update Default VPC Route Table
        ec2_vpc_route_table :
          region: "{{ aws_region }}"
          vpc_id: "{{ vpc_id }}"
          route_table_id: "{{ rt_id }}"
          routes: "{{ route_table.igw }}"
          subnets: "{{ route_table.public }}"
          lookup: id
          state: present
          tags: "{{ vpc_tags | combine(route_table.tags) }}"
        tags:
          - rt
