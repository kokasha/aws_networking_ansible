- name: Create AWS DEV Environment
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files: aws_vars.yml
  tasks:
    - name: Create New VPC
      ec2_vpc_net:
        cidr_block: "{{ dev_env.vpc.cidr }}"
        region: "{{ dev_env.region }}"
        name: "{{ dev_env.vpc.name }}"
        state: "{{ dev_env.vpc.state }}"
        tags: "{{ dev_env.vpc.tags }}"
      register: dev_vpc
      tags: [vpc]

    - name: Get all VPC Facts
      ec2_vpc_net_facts:
        region: "{{ dev_env.region }}"
        filters:
          "tag:Name": "{{ dev_env.vpc.name }}"
      register: vpc_facts
      tags: [vpc,igw]

    - debug: var=vpc_facts

    - set_fact: vpc_id={{vpc_facts.vpcs|map(attribute='vpc_id')|list|first}}
      tags: [vpc,igw]

    - debug: var=vpc_id

    - name: Create IGW
      ec2_vpc_igw:
        region: "{{ dev_env.region }}"
        vpc_id: "{{ vpc_id }}" 
        state: present
      tags:
        - igw

    - name: Create Subnets
      ec2_vpc_subnet:
        region: "{{ dev_env.region }}"
        cidr: "{{ item.cidr }}"
        map_public: "{{ item.public }}"
        vpc_id: "{{ vpc_id }}" 
        tags: "{{ dev_env.vpc.tags|combine(item.tags) }}"
      with_items: "{{dev_env.subnets}}"
      tags: [ec2]

    - name: Get all Subnets Facts
      ec2_vpc_subnet_facts:
        region: "{{ dev_env.region }}"
        filters:
          "tag:Name": "{{ dev_env.ec2.subnet }}"
      register: subnet_facts
      tags: 
        - ec2
    #- debug: var=subnet_facts
    - set_fact: subnet_id={{subnet_facts.subnets|map(attribute='subnet_id')|list|first}}
      tags:
        - ec2 
    - debug: var=subnet_id

    - name: Create EC2 Instances
      ec2:
        region: "{{ dev_env.region }}"
        assign_public_ip: yes
        count: 4
        image: "{{ dev_env.ec2.ami_id}}"
        instance_type: "{{ dev_env.ec2.type }}"
        key_name: "{{ dev_env.ec2.key}}"
        state: present
        vpc_subnet_id: "{{ subnet_id }}"
      tags:
        - ec2